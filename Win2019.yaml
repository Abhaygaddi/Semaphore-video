---
- name: Run Windows Updates on Server 2019 using PSWindowsUpdate
  hosts: all
  gather_facts: no
  become: yes
  become_method: runas
  vars:
    update_log_path: "C:\\Temp\\ForceUpdateLog.txt"
    update_script_path: "C:\\Temp\\RunWinUpdate.ps1"
    task_name: "ForceWindowsUpdate"

  collections:
    - community.windows

  tasks:
    - name: Ensure PSWindowsUpdate module is installed
      win_shell: |
        Install-PackageProvider -Name NuGet -Force
        Set-PSRepository -Name "PSGallery" -InstallationPolicy Trusted
        Install-Module -Name PSWindowsUpdate -Force
      args:
        executable: powershell.exe

    - name: Ensure log directory exists
      win_file:
        path: "C:\\Temp"
        state: directory

    - name: Create Windows Update PowerShell script
      win_copy:
        dest: "{{ update_script_path }}"
        content: |
          Import-Module PSWindowsUpdate
          Get-WindowsUpdate -AcceptAll -Install -ForceDownload -IgnoreReboot |
          Tee-Object -FilePath "{{ update_log_path }}"
      vars:
        ansible_shell_type: powershell

    - name: Create scheduled task to run update script as SYSTEM
      win_scheduled_task:
        name: "{{ task_name }}"
        description: "Force install all available Windows Updates"
        actions:
          - path: powershell.exe
            arguments: "-ExecutionPolicy Bypass -File {{ update_script_path }}"
        run_level: highest
        username: SYSTEM
        state: present
        one_time: true
        triggers:
          - type: once
            start_boundary: "{{ lookup('pipe', 'powershell -Command \"(Get-Date).AddMinutes(1).ToString(\\'yyyy-MM-ddTHH:mm:ss\\')\"') }}"

    - name: Run scheduled task
      win_scheduled_task:
        name: "{{ task_name }}"
        state: started

    - name: Wait for update task to complete (pause 10 minutes)
      pause:
        minutes: 10

    - name: Reboot if pending
      win_reboot:
        reboot_timeout: 1800
        connect_timeout: 30
        msg: "Rebooting for updates to complete."
      register: reboot_result
      when: reboot_result is not defined or reboot_result.reboot_required

    - name: Fetch update log for verification
      win_shell: Get-Content "{{ update_log_path }}"
      register: update_log_output

    - name: Show update log output
      debug:
        msg: "{{ update_log_output.stdout_lines }}"
