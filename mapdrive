---
- name: Install patches from network share and reboot if needed
  hosts: windows
  gather_facts: yes
  become: yes
  become_method: runas
  become_user: Administrator # Or an account with local admin rights

  tasks:
    - name: Map network drive Z (for potential later use or verification)
      win_mapped_drive:
        letter: Z
        path: '\\192.168.29.132\Patches'
        state: present

    - name: Check if Z drive is mapped (compatible with older PowerShell)
      win_shell: |
        $zDrive = Get-PSDrive | Where-Object {$_.Root -like "Z:\*"}
        if ($zDrive) {
          Write-Output $zDrive.Path
          exit 0
        } else {
          exit 1
        }
      register: mapped_drive_check
      failed_when: mapped_drive_check.rc == 1
      changed_when: false

    - name: Install Patch KB5058921.msu using UNC path
      win_package:
        path: '\\\\192.168.29.132\\Patches\\KB5058921.msu'
        state: present
        arguments: '/quiet /norestart'
      register: kb5058921_result

    - name: Log KB5058921 installation status
      win_shell: |
        Add-Content -Path "C:\patch_install.log" -Value "Patch KB5058921.msu - Exit Code: $($_.ExitCode)"
      when: kb5058921_result is defined

    - name: Install Patch KB5055521.msu using UNC path
      win_package:
        path: '\\\\192.168.29.132\\Patches\\KB5055521.msu'
        state: present
        arguments: '/quiet /norestart'
      register: kb5055521_result

    - name: Log KB5055521 installation status
      win_shell: |
        Add-Content -Path "C:\patch_install.log" -Value "Patch KB5055521.msu - Exit Code: $($_.ExitCode)"
      when: kb5055521_result is defined

    - name: Check if reboot is needed
      win_shell: |
        $rebootRequired = Get-ItemProperty -Path "HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\Component Based Servicing\RebootPending" -ErrorAction SilentlyContinue
        if ($rebootRequired) {
          Write-Output "Reboot is pending."
          exit 1
        } else {
          Write-Output "No reboot is pending."
          exit 0
        }
      register: reboot_check
      failed_when: reboot_check.rc == 1
      changed_when: reboot_check.rc == 1

    - name: Reboot the server
      win_reboot:
        reboot_timeout: 600
      when: reboot_check.changed
