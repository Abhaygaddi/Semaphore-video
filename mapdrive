---
- name: Install patches from network share and reboot if needed (Direct wusa test)
  hosts: windows
  gather_facts: yes
  become: yes
  become_method: runas
  become_user: testdc\ansible # Or an account with local admin rights

  vars:
    patch_share: '\\192.168.29.132\Patches'
    kb5058921_path: '{{ patch_share }}\KB5058921.msu'

  tasks:
    - name: Test access to the network share using Get-ChildItem
      win_shell: |
        Try {
          Get-ChildItem -Path "{{ patch_share }}" -ErrorAction Stop
          Write-Output "Successfully accessed the share."
          exit 0
        }
        Catch {
          Write-Error "Failed to access the share: $($_.Exception.Message)"
          exit 1
        }
      register: share_access_test
      failed_when: share_access_test.rc != 0

    - name: Debug - Print output of share access test
      debug:
        var: share_access_test

    - name: Install Patch KB5058921.msu using win_shell (direct wusa)
      win_shell: |
        $patchPath = "{{ kb5058921_path }}"
        Start-Process -FilePath "C:\\Windows\\System32\\wusa.exe" -ArgumentList "$patchPath /quiet /norestart" -Wait -Verb RunAs
      register: wusa_direct_result
      ignore_errors: yes

    - name: Debug - Print result of direct wusa execution
      debug:
        var: wusa_direct_result

    - name: Check if reboot is needed
      win_shell: |
        $rebootRequired = Get-ItemProperty -Path "HKLM:\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Component Based Servicing\\RebootPending" -ErrorAction SilentlyContinue
        if ($rebootRequired) {
          Write-Output "Reboot is pending."
          exit 1
        } else {
          Write-Output "No reboot is pending."
          exit 0
        }
      register: reboot_check
      failed_when: reboot_check.rc == 1
      changed_when: reboot_check.rc == 1

    - name: Reboot the server
      win_reboot:
        reboot_timeout: 600
      when: reboot_check.changed
